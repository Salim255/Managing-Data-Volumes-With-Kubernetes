apiVersion: apps/v1
kind: Deployment
metadata:
  name: story-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storys
  template:
    metadata:
      labels:
        app: storys
    spec:
      containers:
        - name: story
          image: crawan/kube-data-volume:1
          # To make the volume defined in volumes section available for the container
          # And define where the voulume should be mounted
          volumeMounts:
            - mountPath: /app/story
              name: story-volume
      volumes:
        - name: story-volume
          #emptyDir: {} type1
          # This directory will servive as soon as the pod is a life, and when the pod is recreated then a new empty directory will be created
          #Type two is hostPath
          #hostPath:
          #Bind the path in the host machine
          #path: /data
          # Add type to make kubenetes know how this path should be handled
          #type: DirectoryOrCreate
          # We send a message to kuber to tell the directory  /data if it's not exit then should be create
          persistentVolumeClaim:
            claimName: host-pvc
            #Name that declared in host-pvc.yaml file
